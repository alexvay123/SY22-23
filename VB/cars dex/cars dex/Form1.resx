<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bmw.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mewQhCAf/9k=
</value>
  </data>
</root>